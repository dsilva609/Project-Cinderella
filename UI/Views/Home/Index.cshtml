@using UI.Common
@using UI.Enums
@model UI.Models.HomeViewModel
@{
    ViewBag.Title = "Home Page";
}

<script>
    $("#main-body").removeClass("container");
</script>

<div class="jumbotron img-fluid">
    <div class="h3 container">
        <div class="row text-right" style="padding-top: 1em;">
            <div class="jumbotronText text-center">Always know what's playing in your collection.</div>
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="hidden-xs hidden-sm" style="padding-top: 0;">
                    @Html.ActionLink("Login", MVC.Account.Login(), new { @class = "btn btn-default" })
                </div>
            }
        </div>

        <div class="row text-center" style="padding-top: 5em;">
            <div class="text-xs-center">
                @using (Html.BeginForm("Search", "Home", FormMethod.Get, new { @style = "display:inline-flex;" }))
                {
                    @Html.TextBox("query", null, new { @class = "form-control", @placeholder = "Search" })

                    @Html.DropDownList("type", Enum.GetNames(typeof(ItemType)).Select(val => new SelectListItem { Text = val, Value = val, Selected = User.Identity.GetDefaultItemType() == val }).ToList(), new { @class = "form-control" })
                    @Html.DropDownList("act", ActionType.GetTypes(User.Identity.IsAuthenticated).Select(val => new SelectListItem { Text = val.Name, Value = val.Value, Selected = User.Identity.GetDefaultActionType() == val.Value }).ToList(), new { @class = "form-control" })

                    <button type="submit" class="btn btn-default">
                        <span class="fa fa-arrow-right"></span>
                    </button>
                }
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="row panel panel-default">
        <div class="panel-body">
            <ul class="col-sm-6">
                <li>Project Cinderella is a site designed to keep track of your personal media collection (Music, Books, Movies, Games)...digital versions too.</li>
                <li>Having large collections makes it hard to remember what you actually have. Why remember it all?</li>
            </ul>
            <ul class="col-sm-6">
                <li>Find something in a really cool place? Use it to remember where you found certain items.</li>
                <li>Don't know if you already own something? Use it to prevent getting duplicates when you're out searching.</li>
                <li>Happy hunting!</li>
            </ul>
	        <ul class="col-sm-6">
		        <li class="h3">See what's been collected so far: <a href="@Url.Action(MVC.Statistics.Index())"><span class="fa fa-trophy"></span> Stats</a></li>
	        </ul>
			@if (User.Identity.IsAuthenticated)
			{
				<ul class="col-sm-6">
					<li class="h3">See what's on your wish list: <a href="@Url.Action(MVC.Wish.Index())"><span class="fa fa-star"></span> Wish List</a></li>
				</ul>
			}
        </div>
    </div>
</div>

@Html.Partial(MVC.Album.Views._RecentlyAdded, Model.Albums)
@Html.Partial(MVC.Album.Views._RecentlyUpdated, Model.UpdatedAlbums)

@Html.Partial(MVC.Book.Views._RecentlyAdded, Model.Books)
@Html.Partial(MVC.Book.Views._RecentlyUpdated, Model.UpdatedBooks)

@Html.Partial(MVC.Movie.Views._RecentlyAdded, Model.Movies)
@Html.Partial(MVC.Movie.Views._RecentlyUpdated, Model.UpdatedMovies)

@Html.Partial(MVC.Game.Views._RecentlyAdded, Model.Games)
@Html.Partial(MVC.Game.Views._RecentlyUpdated, Model.UpdatedGames)