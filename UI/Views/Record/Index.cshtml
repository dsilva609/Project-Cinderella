@model UI.Models.RecordViewModel
@{
    ViewBag.Title = @Model.ViewTitle;
}
<script>
    var detailsUrl = '@Url.Action(MVC.Record.Details())';
    var deleteUrl = '@Url.Action(MVC.Record.Delete())';
</script>

<div>
    <div class="h2 col-xs-5">
        Current Records In Collection
    </div>
    @if (User.Identity.IsAuthenticated)
    {
        <div class="col-xs-1" style="padding-top: 1.25em;">
            @Html.ActionLink("Add Record", MVC.Record.Create(), new { @class = "btn btn-default" })
        </div>
    }
    <div class="col-xs-6 text-right" style="padding-top: 1.25em;">
        @using (Html.BeginForm(MVC.Record.Index(), FormMethod.Get, new { @style = "display:inline-flex;" }))
        {
            @Html.TextBox("query", null, new { @class = "form-control", @placeholder = "Search" })
            <button type="submit" class="btn btn-default">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        }
    </div>
</div>

<div class="table text-center" style="padding-top: 5em;">
    <div class="bold row">
        <div class="col-xs-3">
            @Html.DisplayNameFor(model => model.Records[0].Artist)
        </div>
        <div class="col-xs-3">
            @Html.DisplayNameFor(model => model.Records[0].AlbumName)
        </div>
        <div class="col-xs-1">
            @Html.DisplayNameFor(model => model.Records[0].MediaType)
        </div>
        <div class="col-xs-1">
            @Html.DisplayNameFor(model => model.Records[0].IsNew)
        </div>
        <div class="col-xs-1">
            @Html.DisplayNameFor(model => model.Records[0].IsPhysical)
        </div>
        <div class="col-xs-1">
            @Html.DisplayNameFor(model => model.Records[0].DatePurchased)
        </div>
    </div>
    @foreach (var item in Model.Records)
    {
        <div id="record" class="row" data-id="@item.ID">
            <div class="col-xs-3">
                @Html.DisplayFor(modelItem => item.Artist)
            </div>
            <div class="col-xs-3">
                @Html.DisplayFor(modelItem => item.AlbumName)
            </div>
            <div class="col-xs-1">
                @Html.DisplayFor(modelItem => item.MediaType)
            </div>
            <div class="col-xs-1">
                @Html.DisplayFor(modelItem => item.IsNew)
            </div>
            <div class="col-xs-1">
                @Html.DisplayFor(modelItem => item.IsPhysical)
            </div>
            <div class="col-xs-1">
                @Html.DisplayFor(modelItem => item.DatePurchased)
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="col-xs-1 removePaddingLeftRight">
                    @Html.ActionLink("Edit", MVC.Record.Edit(item.ID), new { @id = "editRecordBtn", @class = "btn btn-link btn-link-height" })
                    <span> | </span>
                    @Html.ActionLink("Delete", MVC.Record.Delete(item.ID), new { @id = "deleteRecord", @class = "btn btn-link btn-link-height", @data_id = item.ID })
                </div>
            }
        </div>
    }
</div>
<div class="row">
    Page:
    @for (var i = 0; i < Model.PageCount; i++)
    {
        @Html.ActionLink((i + 1).ToString(), MVC.Record.Index("", i + 1), new { @class = "btn btn-link" })

    }
</div>