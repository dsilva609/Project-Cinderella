@using UI.Common
@model BusinessLogic.Models.Game

<script>
    var deleteUrl = '@Url.Action(MVC.Game.Delete())';
</script>

@Html.AntiForgeryToken()

@Html.HiddenFor(m => m.UserID)
@Html.HiddenFor(m => m.DateAdded)
@Html.HiddenFor(m => m.DateStarted)
@Html.HiddenFor(m => m.DateCompleted)
@Html.HiddenFor(m => m.GiantBombID)
@Html.HiddenFor(m => m.BGGID)

<div class="row panel-body">
    @if (Model.DateUpdated != Convert.ToDateTime("1/1/1900") && Model.DateUpdated != DateTime.MinValue)
    {
        <div class="">Last Updated: @Html.Partial(MVC.Shared.Views._Timespan, Model.DateUpdated)</div>
    }

    <div class="col-md-6">
        @Html.LabelFor(m => m.CompletionStatus)
        @Html.EnumDropDownListFor(m => m.CompletionStatus, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CompletionStatus, "", new { @class = "text-danger" })
    </div>

    <div class="col-md-6">
        @Html.LabelFor(m => m.TimesCompleted)
        @Html.TextBoxFor(m => m.TimesCompleted, new { @class = "form-control", type = "number" })
        @Html.ValidationMessageFor(m => m.TimesCompleted, "", new { @class = "text-danger" })
    </div>

    <div class="col-md-6 form-inline">
        <label>
            @Html.CheckBoxFor(m => m.CheckedOut) Checked Out?
        </label>
        @Html.ValidationMessageFor(m => m.CheckedOut, "", new { @class = "text-danger" })
    </div>
</div>

<div data-toggle="collapse" data-parent="#accordion" href="#game-info">
    <div class="row panel panel-primary panel-collapse">
        <div class="panel-heading">
            <h4>
                Game Information
                <span class="fa fa-chevron-circle-down"></span>
            </h4>
        </div>
    </div>
</div>
<div id="game-info" class="collapse in">
    <div class="panel-body">
        <div class="item-title">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
        {
            <div class="animate-box item col-sm-6">
                <a href="@(string.IsNullOrWhiteSpace(Model.ImageUrl) ? Links.Content.Images.Game_jpg : Model.ImageUrl)" class="image-popup img-fluid fh5co-board-img" title="@Model.Developer - @Model.Title (@Model.YearReleased)">
                    <img src="@(string.IsNullOrWhiteSpace(Model.ImageUrl) ? Links.Content.Images.Game_jpg : Model.ImageUrl)" class="img-rounded" style="height: 100%; width: 100%;" @*style="height: 200px; width: 200px;"*@>
                </a>
            </div>
        }

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Developer)
            @Html.TextBoxFor(m => m.Developer, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Developer, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Publisher)
            @Html.TextBoxFor(m => m.Publisher, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Publisher, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.YearReleased)
            @Html.DropDownListFor(m => m.YearReleased, ViewHelpers.GetYearRange(1900, DateTime.Today.Year), Model.YearReleased.ToString(), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.YearReleased, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Genre)
            @Html.TextBoxFor(m => m.Genre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Genre, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Rating)
            @Html.EnumDropDownListFor(m => m.Rating, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Notes)
            @Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Category)
            @Html.TextAreaFor(m => m.Category, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.ImageUrl)
            @Html.TextBoxFor(m => m.ImageUrl, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div data-toggle="collapse" data-parent="#accordion" href="#media-info">
    <div class="row panel panel-primary panel-collapse">
        <div class="panel-heading">
            <h4>
                Media Information
                <span class="fa fa-chevron-circle-down"></span>
            </h4>
        </div>
    </div>
</div>
<div id="media-info" class="collapse in">
    <div class="panel-body">
        <div class="col-sm-6">
            @Html.LabelFor(m => m.Type)
            @Html.EnumDropDownListFor(m => m.Type, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.IsPhysical)
            @Html.CheckBoxFor(m => m.IsPhysical, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IsPhysical, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Platform)
            @Html.EnumDropDownListFor(m => m.Platform, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Platform, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.IsDLC)
            @Html.CheckBoxFor(m => m.IsDLC, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IsDLC, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.PartOfSeries)
            @Html.CheckBoxFor(m => m.PartOfSeries, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PartOfSeries, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.CountryOfOrigin)
            @Html.TextBoxFor(m => m.CountryOfOrigin, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CountryOfOrigin, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.Language)
            @Html.TextBoxFor(m => m.Language, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Language, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div data-toggle="collapse" data-parent="#accordion" href="#purchase-info">
    <div class="row panel panel-primary panel-collapse">
        <div class="panel-heading">
            <h4>
                Purchase Information
                <span class="fa fa-chevron-circle-down"></span>
            </h4>
        </div>
    </div>
</div>
<div id="purchase-info" class="collapse in">
    <div class="panel-body">
        <div class="col-sm-6">
            @Html.LabelFor(m => m.DatePurchased)
            @if (Request.Browser.Browser == "IE" || !Request.Browser.IsMobileDevice)
            {
                @Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "text", Value = Model.DatePurchased.ToShortDateString(), @class = "form-control datepicker" } })
            }
            else
            {
                @Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "date", Value = Model.DatePurchased.ToString("yyyy-MM-dd"), @class = "form-control" } })
            }
            @Html.ValidationMessageFor(m => m.DatePurchased, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.LocationPurchased)
            @Html.TextBoxFor(m => m.LocationPurchased, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LocationPurchased, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6">
            @Html.LabelFor(m => m.IsNew)
            @Html.CheckBoxFor(m => m.IsNew, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IsNew, "", new { @class = "text-danger" })
        </div>


        <div class="col-md-6">
            @Html.LabelFor(m => m.CountryPurchased)
            @Html.TextBoxFor(m => m.CountryPurchased, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CountryPurchased, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row panel-body">
    <div class="col-xs-6 col-md-4">
        <input id="btnSubmit" type="submit" value=@(Model.ID > 0 ? "Save" : "Create") class="btn btn-default btn-block btn-lg" />
    </div>

    @if (Model.ID > 0)
    {
        <div class="col-md-4 offset-md-4 col-xs-6">
            @Html.ActionLink("Delete", MVC.Game.Delete(Model.ID), new { @class = "deleteBtn btn btn-danger btn-block btn-lg", data_id = Model.ID, data_deleteUrl = Url.Action(MVC.Game.Delete()) })
        </div>
    }
</div>