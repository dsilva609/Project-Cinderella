@model BusinessLogic.Models.Game

<script>
	var deleteUrl = '@Url.Action(MVC.Game.Delete())';
</script>

@Html.AntiForgeryToken()

<div>
	@Html.HiddenFor(m => m.UserID)
	@Html.HiddenFor(m => m.DateAdded)
	<div class="row panel panel-primary">
		<div class="panel-heading">
			<h4>
				Game Information
			</h4>
		</div>
		<div class="panel-body">
			<div class="col-xs-6">
				@Html.LabelFor(m => m.Title)
				@Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Developer)
				@Html.TextBoxFor(m => m.Developer, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Developer, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Publisher)
				@Html.TextBoxFor(m => m.Publisher, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Publisher, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.YearReleased)
				@Html.DropDownListFor(m => m.YearReleased, Enumerable.Range(1900, DateTime.Today.Year - 1900 + 1).Reverse().
					Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), Model.YearReleased.ToString(), new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.YearReleased, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Genre)
				@Html.TextBoxFor(m => m.Genre, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Genre, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Rating)
				@Html.EnumDropDownListFor(m => m.Rating, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Notes)
				@Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>
	<div class="row panel panel-primary">
		<div class="panel-heading">
			<h4>Media Information</h4>
		</div>
		<div class="panel-body">
			<div class="col-xs-6">
				@Html.LabelFor(m => m.Type)
				@Html.EnumDropDownListFor(m => m.Type, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.MediaType)
				@Html.EnumDropDownListFor(m => m.MediaType, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.MediaType, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Platform)
				@Html.EnumDropDownListFor(m => m.Platform, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Platform, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.IsDLC)
				@Html.CheckBoxFor(m => m.IsDLC, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.IsDLC, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.PartOfSeries)
				@Html.CheckBoxFor(m => m.PartOfSeries, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.PartOfSeries, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.Country)
				@Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
			</div>
			<div class="col-xs-6">
				@Html.LabelFor(m => m.Language)
				@Html.TextBoxFor(m => m.Language, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Language, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="row panel panel-primary">
		<div class="panel-heading">
			<h4>Purchase Information</h4>
		</div>
		<div class="panel-body">
			<div class="col-xs-6">
				@Html.LabelFor(m => m.DatePurchased)
				@if (Request.Browser.Browser == "IE" || !Request.Browser.IsMobileDevice)
			{
					@Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "text", Value = Model.DatePurchased.ToShortDateString(), @class = "form-control datepicker" } })
			}
			else
			{
					@Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "date", Value = Model.DatePurchased.ToString("yyyy-MM-dd"), @class = "form-control" } })
			}
				@Html.ValidationMessageFor(m => m.DatePurchased, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.LocationPurchased)
				@Html.TextBoxFor(m => m.LocationPurchased, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.LocationPurchased, "", new { @class = "text-danger" })
			</div>

			<div class="col-xs-6">
				@Html.LabelFor(m => m.IsNew)
				@Html.CheckBoxFor(m => m.IsNew, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.IsNew, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="row panel-body">
		<div class="col-xs-8 col-sm-10">
			<input id="btnSubmit" type="submit" value=@(Model.ID > 0 ? "Save" : "Create") class="btn btn-default btn-block btn-lg" />
		</div>

		@if (Model.ID > 0)
			{
			<div class="col-xs-4 col-sm-2">
				@Html.ActionLink("Delete", MVC.Game.Delete(Model.ID), new { id = "deleteBtn", @class = "btn btn-danger btn-block btn-lg", data_id = Model.ID, data_deleteUrl = Url.Action(MVC.Game.Delete()) })
			</div>
			}
	</div>
</div>