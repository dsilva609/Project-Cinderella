@model BusinessLogic.Models.Album

<script>
    var deleteUrl = '@Url.Action(MVC.Album.Delete())';
</script>

@Html.AntiForgeryToken()

@Html.HiddenFor(m => m.UserID)
@Html.HiddenFor(m => m.DateAdded)
<div data-toggle="collapse" data-parent="#accordion" href="#album-info">
    <div class="row panel panel-primary panel-collapse">
        <div class="panel-heading">
            <h4>
                Album Information
                <span class="fa fa-chevron-circle-down"></span>
            </h4>
        </div>
    </div>
</div>
<div id="album-info" class="collapse in">
    <div class="panel-body">
        @if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
        {
            <div class="animate-box item col-xs-12 col-md-6">
                <a href="@(string.IsNullOrWhiteSpace(Model.ImageUrl) ? Links.Content.Images.Turntable_jpg : Model.ImageUrl)" class="image-popup img-fluid fh5co-board-img" title="@Model.Artist - @Model.Title (@Model.YearReleased)">
                    <img src="@(string.IsNullOrWhiteSpace(Model.ImageUrl) ? Links.Content.Images.Turntable_jpg : Model.ImageUrl)" class="img-rounded" style="height: 200px; width: 200px;">
                </a>
            </div>
        }
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.Artist)
            @Html.TextBoxFor(m => m.Artist, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Artist, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="panel-body">
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.Genre)
            @Html.TextBoxFor(m => m.Genre, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Genre, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.YearReleased)
            @Html.DropDownListFor(model => model.YearReleased, Enumerable.Range(1900, DateTime.Today.Year - 1900 + 1).Reverse().
                Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), Model.YearReleased.ToString(), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.YearReleased, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="panel-body">
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.RecordLabel)
            @Html.TextBoxFor(m => m.RecordLabel, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecordLabel, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.Notes)
            @Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.ImageUrl)
            @Html.TextBoxFor(m => m.ImageUrl, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ImageUrl, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.DiscogsID)
            @Html.TextBoxFor(m => m.DiscogsID, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DiscogsID, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

@if (Model.Tracklist != null)
{
    <div data-toggle="collapse" data-parent="#accordion" href="#album-tracks">
        <div class="row panel panel-primary panel-collapse">
            <div class="panel-heading">
                <h4>
                    Track List
                    <span class="fa fa-chevron-circle-down"></span>
                </h4>
            </div>
        </div>
    </div>

    <div id="album-tracks" class="collapse in">
        <div class="panel-body">
            @for (var index = 0; index < Model.Tracklist.Count; index++)
            {
                var track = Model.Tracklist[index];
                <div class="row" style="padding-bottom: 0.5em;">
                    <div class="col-sm-2">
                        <input class="form-control col-sm-1" type="text" name="@string.Format("Tracklist[{0}].position", @index)" value="@track.position" />
                    </div>
                    <div class="col-sm-2">
                        <input class="form-control col-sm-2" type="text" name="@string.Format("Tracklist[{0}].duration", @index)" value="@track.duration" />
                    </div>
                    <div class="col-sm-6">
                        <input class="form-control col-sm-2" type="text" name="@string.Format("Tracklist[{0}].title", @index)" value="@track.title" />
                    </div>
                </div>
            }
        </div>
    </div>
}
<div data-toggle="collapse" data-parent="#accordion" href="#media-info">
    <div class="row panel panel-primary panel-collapse">
        <div class="panel-heading">
            <h4>
                Media Information
                <span class="fa fa-chevron-circle-down"></span>
            </h4>
        </div>
    </div>
</div>
<div id="media-info" class="collapse in">
    <div class="panel-body">
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.MediaType)
            @Html.EnumDropDownListFor(m => m.MediaType, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MediaType, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.IsPhysical)
            @Html.CheckBoxFor(m => m.IsPhysical, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IsPhysical, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.Speed)
            @Html.EnumDropDownListFor(m => m.Speed, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Speed, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.Size)
            @Html.EnumDropDownListFor(m => m.Size, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Size, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div data-toggle="collapse" data-parent="#accordion" href="#purchase-info">
    <div class="row panel panel-primary panel-collapse">
        <div class="panel-heading">
            <h4>
                Purchase Information
                <span class="fa fa-chevron-circle-down"></span>
            </h4>
        </div>
    </div>
</div>
<div id="purchase-info" class="collapse in">
    <div class="panel-body">
        <div class="col-md-6 col-xs-12">
            @Html.LabelFor(m => m.DatePurchased)
            @if (Request.Browser.Browser == "IE" || !Request.Browser.IsMobileDevice)
            {
                @Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "text", Value = Model.DatePurchased.ToShortDateString(), @class = "form-control datepicker" } })
            }
            else
            {
                @Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "date", Value = Model.DatePurchased.ToString("yyyy-MM-dd"), @class = "form-control" } })
            }
            @Html.ValidationMessageFor(m => m.DatePurchased, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4 col-xs-12">
            @Html.LabelFor(m => m.LocationPurchased)
            @Html.TextBoxFor(m => m.LocationPurchased, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LocationPurchased, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-2 col-xs-12">
            @Html.LabelFor(m => m.IsNew)
            @Html.CheckBoxFor(m => m.IsNew, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.IsNew, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row panel-body">
    <div class="col-md-8 col-xs-12">
        <input id="btnSubmit" type="submit" value=@(Model.ID > 0 ? "Save" : "Create") class="btn btn-default btn-block btn-lg" />
    </div>

    @if (Model.ID > 0)
    {
        <div class="col-md-4 col-xs-12">
            @Html.ActionLink("Delete", MVC.Album.Delete(Model.ID), new { id = "deleteBtn", @class = "btn btn-danger btn-block btn-lg", data_id = Model.ID, data_deleteUrl = Url.Action(MVC.Album.Delete()) })
        </div>
    }
</div>