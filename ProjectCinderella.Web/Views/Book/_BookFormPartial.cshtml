@using ProjectCinderellaCore.Common
@model ProjectCinderella.Model.Common.Book

<script>
	var deleteUrl = '@Url.Action("Delete", "Book")';
</script>

@Html.AntiForgeryToken()

@Html.HiddenFor(m => m.UserID)
@Html.HiddenFor(m => m.UserNum)
@Html.HiddenFor(m => m.DateAdded)
@Html.HiddenFor(m => m.DateStarted)
@Html.HiddenFor(m => m.DateCompleted)
@Html.HiddenFor(m => m.IsShowcased)

<div class="row panel-body">
	@if (Model.DateAdded != Convert.ToDateTime("1/1/1900") && Model.DateAdded != DateTime.MinValue)
	{
		<div>Date Added: @Html.Partial("_Timespan", Model.DateAdded)</div>
	}
	@if (Model.DateUpdated != Convert.ToDateTime("1/1/1900") && Model.DateUpdated != DateTime.MinValue)
	{
		<div class="">Last Updated: @Html.Partial("_Timespan", Model.DateUpdated)</div>
	}

	<div class="col-md-6">
		@Html.LabelFor(m => m.CompletionStatus)
		@Html.EnumDropDownListFor(m => m.CompletionStatus, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.CompletionStatus, "", new { @class = "text-danger" })
	</div>

	<div class="col-md-6">
		@Html.LabelFor(m => m.TimesCompleted)
		<div style="display: inline-flex;">
			@if (Model.TimesCompleted > 0)
			{
				<a class="btn btn-default" href="/Book/DecreaseCompletionCount/@Model.ID">
					<span class="fa fa-minus"></span>
				</a>
			}
			@Html.TextBoxFor(m => m.TimesCompleted, new { @class = "form-control", type = "number" })
			<a class="btn btn-default" href="/Book/IncreaseCompletionCount/@Model.ID">
				<span class="fa fa-plus"></span>
			</a>
		</div>
		@Html.ValidationMessageFor(m => m.TimesCompleted, "", new { @class = "text-danger" })
	</div>

	<div class="row">
		<div class="col-md-6 form-inline">
			<label>
				@Html.CheckBoxFor(m => m.CheckedOut) Checked Out?
			</label>
			@Html.ValidationMessageFor(m => m.CheckedOut, "", new { @class = "text-danger" })
		</div>

		@if (Model.ID > 0)
		{
			if (!Model.IsShowcased)
			{
				<div class="col-md-6">
					@Html.ActionLink("Add to Showcase", "AddToShowcase", "Book", null, null, null, Model.ID, new { @class = "btn btn-default" })
				</div>
			}
			else
			{
				<div class="col-md-6">
					@Html.ActionLink("Remove from Showcase", "RemoveFromShowcase", "Book", null, null, null, Model.ID, new { @class = "btn btn-danger" })
				</div>
			}

			if (Model.IsQueued)
			{
				<div class="col-md-6">
					@Html.ActionLink("Remove from queue","RemoveFromQueue", "Book", null, null, null, Model.ID, new { @class = "btn btn-danger" })
				</div>
			}
			else
			{
				<div class="col-md-6">
					@Html.ActionLink("Add to queue", "AddToQueue", "Book", null, null, null, Model.ID, new { @class = "btn btn-default" })
				</div>
			}
		}
	</div>
</div>

<div data-toggle="collapse" data-parent="#accordion" href="#book-info">
	<div class="row panel panel-primary panel-collapse">
		<div class="panel-heading">
			<h4>
				Book Information
				<span class="fa fa-chevron-circle-down"></span>
			</h4>
		</div>
	</div>
</div>
<div id="book-info" class="collapse in">
	<div class="panel-body">
		@if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
		{
			<div class="animate-box item col-sm-6">
				<a href="@Model.ImageUrl" class="image-popup img-fluid fh5co-board-img">
					<img src="@Model.ImageUrl" class="img-rounded" style="height: 100%; width: 100%;">
				</a>
			</div>
		}
		<div class="item-title">
			<div class="col-sm-6">
				@Html.LabelFor(m => m.Title)
				@Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
			</div>

			<div class="col-sm-6">
				@Html.LabelFor(m => m.Author)
				@Html.TextBoxFor(m => m.Author, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Author, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.Publisher)
			@Html.TextBoxFor(m => m.Publisher, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Publisher, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.YearReleased)
			@Html.DropDownListFor(m => m.YearReleased, ViewHelpers.GetYearRange(1900, DateTime.Today.Year), Model.YearReleased.ToString(), new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.YearReleased, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.Genre)
			@Html.TextBoxFor(m => m.Genre, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Genre, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.ISBN10)
			@Html.TextBoxFor(m => m.ISBN10, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.ISBN10, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.ISBN13)
			@Html.TextBoxFor(m => m.ISBN13, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.ISBN13, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.ImageUrl)
			@Html.TextBoxFor(m => m.ImageUrl, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.ImageUrl, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.Notes)
			@Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.Category)
			@Html.TextAreaFor(m => m.Category, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
		</div>
	</div>
</div>
<div data-toggle="collapse" data-parent="#accordion" href="#media-info">
	<div class="row panel panel-primary panel-collapse">
		<div class="panel-heading">
			<h4>
				Media Information
				<span class="fa fa-chevron-circle-down"></span>
			</h4>
		</div>
	</div>
</div>
<div id="media-info" class="collapse in">
	<div class="panel-body">
		<div class="col-sm-6">
			@Html.LabelFor(m => m.Type)
			@Html.EnumDropDownListFor(m => m.Type, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.IsPhysical)
			@Html.CheckBoxFor(m => m.IsPhysical, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.IsPhysical, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.Hardcover)
			@Html.CheckBoxFor(m => m.Hardcover, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Hardcover, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.IsFirstEdition)
			@Html.CheckBoxFor(m => m.IsFirstEdition, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.IsFirstEdition, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.Language)
			@Html.TextBoxFor(m => m.Language, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Language, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.CountryOfOrigin)
			@Html.TextBoxFor(m => m.CountryOfOrigin, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.CountryOfOrigin, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.IsReissue)
			@Html.CheckBoxFor(m => m.IsReissue, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.IsReissue, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.PageCount)
			@Html.TextBoxFor(m => m.PageCount, new { @class = "form-control", type = "number" })
			@Html.ValidationMessageFor(m => m.PageCount, "", new { @class = "text-danger" })
		</div>
	</div>
</div>

<div data-toggle="collapse" data-parent="#accordion" href="#purchase-info">
	<div class="row panel panel-primary panel-collapse">
		<div class="panel-heading">
			<h4>
				Purchase Information
				<span class="fa fa-chevron-circle-down"></span>
			</h4>
		</div>
	</div>
</div>
<div id="purchase-info" class="collapse in">
	<div class="panel-body">
		<div class="col-sm-6">
			@Html.LabelFor(m => m.DatePurchased)
			@(!Context.Request.Headers["User-Agent"].Contains("Mobi") 
				? Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "text", Value = Model.DatePurchased.ToShortDateString(), @class = "form-control datepicker" } })
			    : Html.EditorFor(m => m.DatePurchased, new { htmlattributes = new { type = "date", Value = Model.DatePurchased.ToString("yyyy-MM-dd"), @class = "form-control" } }))
			
			@Html.ValidationMessageFor(m => m.DatePurchased, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.LocationPurchased)
			@Html.TextBoxFor(m => m.LocationPurchased, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.LocationPurchased, "", new { @class = "text-danger" })
		</div>

		<div class="col-sm-6">
			@Html.LabelFor(m => m.IsNew)
			@Html.CheckBoxFor(m => m.IsNew, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.IsNew, "", new { @class = "text-danger" })
		</div>

		<div class="col-md-6">
			@Html.LabelFor(m => m.CountryPurchased)
			@Html.TextBoxFor(m => m.CountryPurchased, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.CountryPurchased, "", new { @class = "text-danger" })
		</div>
	</div>
</div>

<div class="row panel-body">
	<div class="col-xs-6 col-md-4">
		<input id="btnSubmit" type="submit" value="@(Model.ID > 0 ? "Save" : "Create")" class="btn btn-default btn-block btn-lg" />
	</div>

	@if (Model.ID > 0)
	{
		<div class="col-xs-6 col-md-4 offset-md-4">
			@Html.ActionLink("Delete", "Delete", "Book", null, null, null, Model.ID, new { @class = "deleteBtn btn btn-danger btn-block btn-lg", data_id = Model.ID, data_deleteUrl = Url.Action(MVC.Book.Delete()) })
		</div>
	}
</div>